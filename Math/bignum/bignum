{use> ./lib/core}

{def> big-uadd> a> b> 
	{priv> transfer> length> res> sum> i>
		{def> length: {clc-max: {strlen: {a}}: {strlen: {b}}}}
		{def> a: {str-pad-left: {a}: {length}> 0}}
		{def> b: {str-pad-left: {b}: {length}> 0}}
		{def> i: {sub: {length}> 1}}
		{def> res>}
		{while> {if-gt: {i}> -1}>
			{def> sum: {clc: {cc: {a}: {i}}> +: {cc: {b}: {i}}> +: {transfer}}}
			{def> res: {res}{mod: {sum}> 10}}
			{def> transfer: {div: {sum}> 10}}
			{decr> i}
		}
		{if: {transfer}> )> 0>
			{def> res: {res}{transfer}}
		>}
		{def> i: {sub: {strlen: {res}}> 1}}
		{big-del-zeros: 
			{while> {if-gt: {i}> -1}>
				{cc: {res}: {i}}
				{decr> i}
			}
		}
	}
}

{def> big-sub-sign> a> b> 
	{priv> i> ret>
		{def> i> 0}
		{def> ret> 0}
		{if: {strlen: {a}}> ): {strlen: {b}}>
			{def> ret> 1}
			{def> i: {strlen: {a}}}
		>}

		{if: {strlen: {a}}> (: {strlen: {b}}>
			{def> ret> -1}
			{def> i: {strlen: {a}}}
		>}
		
		{while> {if-ls: {i}: {strlen: {a}}}>
			{if: {cc: {a}: {i}}> ): {cc: {b}: {i}}>
				{def> ret> 1}
				{def> i: {strlen: {a}}}
			>}
			{if: {cc: {a}: {i}}> (: {cc: {b}: {i}}>
				{def> ret> -1}
				{def> i: {strlen: {a}}}
			>}
			{incr> i}
		}
		{ret}
	}
}

{def> big-usub> a> b> 
	{priv> transfer> length> res> sub> i> sign> tmp>
		{def> length: {clc-max: {strlen: {a}}: {strlen: {b}}}}
		{def> sign: {big-sub-sign: {a}: {b}}}
		{if: {sign}> => -1> 
			{def> tmp: {a}}
			{def> a: {b}}
			{def> b: {tmp}}
			-
		>}
		{def> a: {str-pad-left: {a}: {length}> 0}}
		{def> b: {str-pad-left: {b}: {length}> 0}}
		{def> i: {sub: {length}> 1}}
		{def> res>}
		{while> {if-gt: {i}> -1}>
			{def> sub: {clc: {cc: {a}: {i}}> -: {cc: {b}: {i}}> -: {transfer}}}
			{if: {sub}> (> 0> 
				{def> sub: {add: {sub}> 10}}
				{def> transfer> 1}
			>
				{def> transfer> 0}
			}
			{def> res: {sub}{res}}
			
			{decr> i}
		}
		{big-del-zeros: {res}}
	}
}

{def> big-umul> a> b>
	{priv> i> j> carry> ret> tmp> res>
		{def> ret>}
		{def> a: {str-reverse: {a}}}
		{def> b: {str-reverse: {b}}}
		{do> i> 0: {strlen: {a}}> 
			{def> carry> 0}
			{def> tmp>}
			{do> j> 0: {strlen: {b}}> 
				{def> res: {clc: {cc: {a}: {i}}> *: {cc: {b}: {j}}> +: {carry}}}
				{def> tmp: {mod: {res}> 10}{tmp}}
				{def> carry: {div: {res}> 10}}
			}
			{if-gt: {carry}> 0> 
				{def> tmp: {carry}{tmp}}
			>	}
			{do> k> 0: {i}> 
				{def> tmp: {tmp}0}
			}
			{def> ret: {big-add: {tmp}: {ret}}}
		}
		{ret}
	}
}

{def> big-udiv> a> b>
	{priv> ret> num> dig>
		{def> ret> 0}
		{def> num> 0}
		{do> i> 0: {strlen: {a}}> 
			{def> num: {big-add: {big-mul: {num}> 10}: {cc: {a}: {i}}}}
			{def> dig> 0}
			{while> {big-if-gt: {num}: {big-sub: {big-udiv-1}> 1}}>
				{def> num: {big-sub: {num}: {big-udiv-1}}}
				{def> dig: {big-add: {dig}> 1}}
			}
			{def> ret: {big-add: {big-mul: {ret}> 10}: {dig}}}
		}
		{ret}
	}
}

{def> big-umod> a> b>
	{priv> ret> num> dig>
		{def> ret> 0}
		{def> num> 0}
		{do> i> 0: {strlen: {a}}> 
			{def> num: {big-add: {big-mul: {num}> 10}: {cc: {a}: {i}}}}
			{def> dig> 0}
			{while> {big-if-gt: {num}: {big-sub: {big-umod-1}> 1}}>
				{def> num: {big-sub: {num}: {big-umod-1}}}
				{def> dig: {big-add: {dig}> 1}}
			}
		}
		{num}
	}
}


{def> big-del-zeros> str>
	{priv> i> t>
		{def> i> 0}
		{def> t> 1}
		{def> str: {str}1}
		{loop> t>
			{if: {cc: {str}: {i}}> !> 0> 
				{def> t> 0}
			>
				{def> i: {clc: {i}> +> 1}}
			}		
		}
		{if: {i}> =: {clc: {strlen: {str}}> -> 1}> 0>
			{str-substr: {str}: {i}: {clc: {strlen: {str}}> -: {i}> -> 1}}
		}
	}
}


{def> big-is-neg> a> 
	{if: {asc: {a}> 0}> => 45> 1> 0}
}

{def> big-rs> a> 
	{str-substr: {a}> 1: {sub: {strlen: {a}}> 1}}
}

{def> big-abs> a> 
	{if: {big-is-neg: {a}}> 
		{big-rs: {a}}
	> 
		{a}
	}
}

{def> big-add> a> b> 
	{if-match: {big-is-neg: {a}}{big-is-neg: {b}}> 
		00> {big-uadd: {a}: {b}}>
		01> {big-usub: {a}: {big-rs: {b}}}>
		10> {big-usub: {b}: {big-rs: {a}}}>
		11> -{big-uadd: {big-rs: {a}}: {big-rs: {b}}}>
	}
}

{def> big-sub> a> b> 
	{if-match: {big-is-neg: {a}}{big-is-neg: {b}}> 
		00> {big-usub: {a}: {b}}>
		01> {big-uadd: {a}: {big-rs: {b}}}>
		10> -{big-uadd: {big-rs: {a}}: {b}}>
		11> {big-usub: {big-rs: {b}}: {big-rs: {a}}}>
	}
}

{def> big-mul> a> b> 
	{if-match: {big-is-neg: {a}}{big-is-neg: {b}}> 
		00> {big-umul: {a}: {b}}>
		01> -{big-umul: {a}: {big-rs: {b}}}>
		10> -{big-umul: {big-rs: {a}}: {b}}>
		11> {big-umul: {big-rs: {b}}: {big-rs: {a}}}>
	}
}

{def> big-div> a> b> 
	{if-match: {big-is-neg: {a}}{big-is-neg: {b}}> 
		00> {big-udiv: {a}: {b}}>
		01> -{big-udiv: {a}: {big-rs: {b}}}>
		10> -{big-udiv: {big-rs: {a}}: {b}}>
		11> {big-udiv: {big-rs: {a}}: {big-rs: {b}}}>
	}
}

{def> big-mod> a> b> 
	{if-match: {big-is-neg: {a}}{big-is-neg: {b}}> 
		00> {big-umod: {a}: {b}}>
		01> {big-umod: {a}: {big-rs: {b}}}>
		10> -{big-umod: {big-rs: {a}}: {b}}>
		11> -{big-umod: {big-rs: {a}}: {big-rs: {b}}}>
	}
}


{def> big-if-gt>
	{priv> big-op-000> big-op-001> big-op-010> big-op-011> big-op-100> big-op-101> big-op-110> big-op-111>
		{def> big-op-000> {if-eq: {big-sub-sign: {big-if-gt-0}: {big-if-gt-1}}> 1> 1> 0}}
		{def> big-op-001> 1}
		{def> big-op-010> 0}
		{def> big-op-011> 
			{if-eq: {big-sub-sign: {big-rs: {big-if-gt-0}}: {big-rs: {big-if-gt-1}}}> -1> 1> 0}
		}
		{def> big-op-100> 
			{if-eq: {big-sub-sign: {big-if-gt-0}: {big-if-gt-1}}> 1> {big-if-gt-2}> {big-if-gt-3}}
		}
		{def> big-op-101> {big-if-gt-2}}
		{def> big-op-110> {big-if-gt-3}}
		{def> big-op-111> 
			{if-eq: {big-sub-sign: {big-rs: {big-if-gt-0}}: {big-rs: {big-if-gt-1}}}> -1> {big-if-gt-2}> {big-if-gt-3}}
		}

		{e: {qq: big-op-{if-eq: {big-if-gt-len}> 4}{big-is-neg: {big-if-gt-0}}{big-is-neg: {big-if-gt-1}}}}
	}
}

{def> big-if-ls>
	{priv> big-op-000> big-op-001> big-op-010> big-op-011> big-op-100> big-op-101> big-op-110> big-op-111>
		{def> big-op-000> {if-eq: {big-sub-sign: {big-if-ls-0}: {big-if-ls-1}> -1> 1> 0}}}
		{def> big-op-001> 0}
		{def> big-op-010> 1}
		{def> big-op-011> 
			{if-eq: {big-sub-sign: {big-rs: {big-if-ls-0}}: {big-rs: {big-if-ls-1}}> 1> 1> 0}}
		}
		{def> big-op-100> 
			{if-eq: {big-sub-sign: {big-if-ls-0}: {big-if-ls-1}> -1> {big-if-ls-2}> {big-if-ls-3}}}
		}
		{def> big-op-101> {big-if-ls-3}}
		{def> big-op-110> {big-if-ls-2}}
		{def> big-op-111> 
			{if-eq: {big-sub-sign: {big-rs: {big-if-ls-0}}: {big-rs: {big-if-ls-1}}> 1> {big-if-ls-2}> {big-if-ls-3}}}
		}

		{e: {qq: big-op-{if-eq: {big-if-ls-len}> 4}{big-is-neg: {big-if-ls-0}}{big-is-neg: {big-if-ls-1}}}}
	}
}

{def> big-if-eq> big-if-eq-0> b> 
	{priv> big-op-000> big-op-001> big-op-010> big-op-011> big-op-100> big-op-101> big-op-110> big-op-111>
		{def> big-op-000> {if-eq: {big-sub-sign: {big-if-eq-0}: {big-if-eq-1}}> 0> 1> 0}}
		{def> big-op-001> 0}
		{def> big-op-010> 0}
		{def> big-op-011> {if-eq: {big-sub-sign: {big-rs: {big-if-eq-0}}: {big-rs: {big-if-eq-1}}}> 0> 1> 0}}
		{def> big-op-100> {if-eq: {big-sub-sign: {big-if-eq-0}: {big-if-eq-1}}> 0> {big-if-eq-2}> {big-if-eq-3}}}
		{def> big-op-101> {big-if-eq-3}}
		{def> big-op-110> {big-if-eq-3}}
		{def> big-op-111> 
			{if-eq: {big-sub-sign: {big-rs: {big-if-eq-0}}: {big-rs: {big-if-eq-1}}}> 0> {big-if-eq-2}> {big-if-eq-3}}
		}

		{e: {qq: big-op-{if-eq: {big-if-eq-len}> 4}{big-is-neg: {big-if-eq-0}}{big-is-neg: {big-if-eq-1}}}}
	}
}


{def> big-clc>
	{priv> a> b> 
		{def> a: {big-clc-0}}
		{for> i> 1: {big-clc-len}> 2> 
			{def> b: {v: big-clc-{add: {i}> 1}}}
			{def> a: 
				{if-match: {v: big-clc-{i}}>
				+> {big-add: {a}: {b}}>
				-> {big-sub: {a}: {b}}>
				*> {big-mul: {a}: {b}}>
				/> {big-div: {a}: {b}}>
				%> {big-mod: {a}: {b}}>
				}
			}
		}
		{a}
	}
}